{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Start commands": {
		"scope": "typescript,cpp,c++",
		"prefix": "compe",
		"body": [
			"#include <bits/stdc++.h>",
			"#define int long long",
			"",
			"const int N = 1e5 + 5;",
			"const int MOD = 1e9 + 7;",
			"const double PI = acos(-1);",
			"",
			"#define sz(s) (int)s.size()",
			"",
			"#define pb push_back",
			"#define pf push_front",
			"",
			"#define rep(i, x, n) for (int i = x; i < n; i++)",
			"#define repD(i, x, n) for (int i = x; i >= n; i--)",
			"",
			"using namespace std;",
			"signed main()",
			"{",
			"    ios_base::sync_with_stdio(0);",
			"    cin.tie(0);",
			"    cout.tie(0);",
			"}",
		],
		"description": "Initialize basic commands for competitive programming"
	}
}